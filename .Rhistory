# Esta función calcula el monto total
calcularMontoVentaTotal <- function(precioVenta, cantidadVenta, unidadDeVenta){
ifelse(unidadDeVenta == 1, precioVenta * cantidadVenta,
ifelse(unidadDeVenta == 2, precioVenta,
ifelse(is.na(unidadDeVenta),0,0)))
}
# Calculo de la venta total
ganaderia_produccion <- ganaderia_produccion %>%
mutate(montoVentaTotal = calcularMontoVentaTotal(
s7c7dp03a,  # monto de venta (puede ser precio o monto total)
s7c7dp02,  # num animales vendidos en el periodo
s7c7dp03b) # 01 venta por cabeza o 02 venta total
)
valorProduccionGanadera <- ganaderia_produccion %>%
group_by(cons, edo, NOM_ENT, mun, NOM_MUN, grupo, NOMBRE_GRUPO) %>%
# cantidad
summarise(monto_venta = sum(as.numeric(montoVentaTotal), na.rm = TRUE))
animalesVendidos <- ganaderia_produccion %>%
group_by(cons, grupo) %>%
# cantidad
summarise(animales_venta = sum(as.numeric(s7c7dp02), na.rm = TRUE))
ganaderia_produccion <- left_join(valorProduccionGanadera, animalesVendidos, by = c("cons" = "cons", "grupo" = "grupo"))
head(ganaderia_produccion,10)
guardarTablaProcesada(ganaderia_produccion)
# Cargar base de datos en formato STATA a R y guardar base de datos en formato CSV.
prod_ganade_ta <- procesarSTATA("Produccion_ganade_ta")
# Desplegar el nombre de los campos
names(prod_ganade_ta)
# Función para extraer el campo de miembro del hogar
cleanKey <- function(key, start, end){
substring(key,start,end)
}
# horas y minutos
ganaderia_household_labor_time  <- prod_ganade_ta %>%
filter(s7c7gp02 == 1) %>% # Trabajaron miembros del hogar en ganadería 1 sí / 2 no
select(
cons,          # número de cuestionario
edo,           # clave estado
mun,           # clave municipio
loc,           # clave localidad
s7c7gp01,      # Grupo animal
s7c7gp04a,     # Persona A: número horas o minutos al día le trabajó
s7c7gp04b,     # Persona B: número horas o minutos al día le trabajó
s7c7gp04c,     # Persona C: número horas o minutos al día le trabajó
s7c7gp04d,     # Persona D: número horas o minutos al día le trabajó
s7c7gp04e      # Persona E: número horas o minutos al día le trabajó
) %>%
arrange(cons, s7c7gp01) %>%
gather(6:10, key = "householdMember", value = "num_hours_or_min") %>%
mutate(member = cleanKey(householdMember,9,9)) %>%
mutate_at(vars("cons","edo","mun","loc","s7c7gp01", "householdMember","member"), funs(as.character))
# codigo horas y minutos
ganaderia_household_labor_code_time  <- prod_ganade_ta %>%
filter(s7c7gp02 == 1) %>% # Trabajaron miembros del hogar en ganadería 1 sí / 2 no
select(
cons,          # número de cuestionario
edo,           # clave estado
mun,           # clave municipio
loc,           # clave localidad
s7c7gp01,      # Grupo animal
s7c7gp04_ca,   # Persona A: código horas (1) o minutos (2)
s7c7gp04_cb,   # Persona B: código horas (1) o minutos (2)
s7c7gp04_cc,   # Persona C: código horas (1) o minutos (2)
s7c7gp04_cd,   # Persona D: código horas (1) o minutos (2)
s7c7gp04_ce   # Persona E: código horas (1) o minutos (2)
) %>%
arrange(cons, s7c7gp01) %>%
gather(6:10, key = "householdMember", value = "code_hours_or_min") %>%
mutate(member = cleanKey(householdMember,11,11))  %>%
mutate_all(funs(as.character))
# número de días a la semana
ganaderia_household_labor_code_days  <- prod_ganade_ta %>%
filter(s7c7gp02 == 1) %>% # Trabajaron miembros del hogar en ganadería 1 sí / 2 no
select(
cons,          # número de cuestionario
edo,           # clave estado
mun,           # clave municipio
loc,           # clave localidad
s7c7gp01,      # Grupo animal
s7c7gp05a,     # Persona A: número de días a la semana
s7c7gp05b,     # Persona B: número de días a la semana
s7c7gp05c,     # Persona C: número de días a la semana
s7c7gp05d,     # Persona D: número de días a la semana
s7c7gp05e     # Persona E: número de días a la semana
) %>%
arrange(cons, s7c7gp01) %>%
gather(6:10, key = "householdMember", value = "days") %>%
mutate(member = cleanKey(householdMember,9,9)) %>%
mutate_at(vars("cons","edo","mun","loc","s7c7gp01", "householdMember", "member"),funs(as.character))
# número de días al mes
ganaderia_household_labor_code_months  <- prod_ganade_ta %>%
filter(s7c7gp02 == 1) %>% # Trabajaron miembros del hogar en ganadería 1 sí / 2 no
select(
cons,          # número de cuestionario
edo,           # clave estado
mun,           # clave municipio
loc,           # clave localidad
s7c7gp01,      # Grupo animal
s7c7gp06a,     # Persona A: número de meses
s7c7gp06b,     # Persona B: número de meses
s7c7gp06c,     # Persona C: número de meses
s7c7gp06d,     # Persona D: número de meses
s7c7gp06e      # Persona E: número de meses
) %>%
arrange(cons, s7c7gp01) %>%
gather(6:10, key = "householdMember", value = "months") %>%
mutate(member = cleanKey(householdMember,9,9)) %>%
mutate_at(vars("cons","edo","mun","loc", "s7c7gp01", "householdMember", "member"),funs(as.character))
# Joins para formar una sola tabla de labor a partir de las cuatro tablas extraídas.
ganaderia_household_labor <- left_join(ganaderia_household_labor_time, ganaderia_household_labor_code_time,
by = c("cons"= "cons", "s7c7gp01" = "s7c7gp01", "member" = "member"))
ganaderia_household_labor <- left_join(ganaderia_household_labor, ganaderia_household_labor_code_days,
by = c("cons"= "cons", "s7c7gp01" = "s7c7gp01", "member" = "member"))
ganaderia_household_labor <- left_join(ganaderia_household_labor, ganaderia_household_labor_code_months,
by = c("cons"= "cons", "s7c7gp01" = "s7c7gp01", "member" = "member"))
ganaderia_household_labor <- left_join(ganaderia_household_labor, cat_gpo_animal, by = c("s7c7gp01" ="COD_GPO"))
cbind(sapply(ganaderia_household_labor, class))
# Extracción de campos relevantes
ganaderia_household_labor <-  select(ganaderia_household_labor,
cons,
edo.x,           # clave estado
mun.x,           # clave municipio
loc.x,           # clave localidad
s7c7gp01,
NOMBRE_GRUPO,
member,
num_hours_or_min,
code_hours_or_min,
days,
months) %>%
arrange(cons, s7c7gp01, member)
head(ganaderia_household_labor)
# Función para construir un solo campo de tiempo en horas día
calcularHora  <- function(tiempo, codigoTiempo){
ifelse(codigoTiempo == 1, tiempo,
ifelse(codigoTiempo == 2, tiempo/60,
ifelse(is.na(tiempo), 0,
ifelse(is.nan(tiempo), 0, 0))))
}
# Cálculo de horas a la semana, mes y año, así como renombre de campos
ganaderia_household_labor <- mutate(ganaderia_household_labor,
horasDia = calcularHora(num_hours_or_min, code_hours_or_min)) %>%
mutate(horasSemana = horasDia * days) %>%
mutate(horasMes = horasSemana * 4) %>%
mutate(horasAno = horasMes * months) %>%
mutate(cons = sprintf("%04d", as.numeric(cons))) %>%
mutate(edo.x = sprintf("%02d", as.numeric(edo.x))) %>%
mutate(mun.x = sprintf("%03d", as.numeric(mun.x))) %>%
mutate(loc.x = sprintf("%04d", as.numeric(loc.x))) %>%
rename(cve_edo = edo.x,
cve_mun = mun.x,
cve_loc = loc.x,
grupo_animal = NOMBRE_GRUPO,
miembro_hogar = member
)
# Joins de catalogos estado y municipio
ganaderia_household_labor <- left_join(ganaderia_household_labor,cat_estado, by = c("cve_edo" = "CVE_ENT"))
ganaderia_household_labor <- left_join(ganaderia_household_labor, cat_municipio, by = c("cve_edo" = "CVE_ENT", "cve_mun" = "CVE_MUN"))
guardarTablaProcesada(ganaderia_household_labor)
head(ganaderia_household_labor)
# Agregación de la tabla trabajo para dar formato final.
labor <- ganaderia_household_labor %>%
group_by(cons, cve_edo, NOM_ENT, cve_mun, NOM_MUN, cve_loc, grupo_animal) %>%
summarise(horas_anuales = sum(horasAno, na.rm = TRUE)) %>%
arrange(grupo_animal)
guardarTablaProcesada(labor)
head(labor, 10)
nrow(labor)
labor %>% group_by(grupo_animal) %>% summarise(horas_anuales = sum(horas_anuales)) %>% arrange(desc(horas_anuales))
library(tidyverse)
emisiones_agricola <- read_csv("emisiones/agricola.csv", header = T)
?read_csv
emisiones_agricola <- read_csv("emisiones/agricola.csv", col_names = TRUE)
emisiones_uscuss <- read_csv("emisiones/uscuss.csv", col_names = TRUE)
dir(dir())
dir()
setwd("C:/Users/dante.ruiz/Desktop/afolu/emisiones")
emisiones_agricola <- read_csv("emisiones/agricola.csv", col_names = TRUE)
dir()
setwd("C:/Users/dante.ruiz/Desktop/afolu")
emisiones_agricola <- read_csv("emisiones/agricola.csv", col_names = TRUE)
View(emisiones_agricola)
emisiones_uscuss <- read_csv("emisiones/uscuss.csv", col_names = TRUE)
library(ggplot2)
emisiones_agricola
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, manejo_estiercol)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, cult_arroz)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, man_suelo_argi)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, quema_resi_agri)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, tot_ch4)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, tot_n2o)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, tot_emisiones)) +
geom_point()
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle(Emisiones de la fermentación entérica Gg de CO2e)
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica Gg de CO2e")
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica (Gg de CO2e)")
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica \n(Gg de CO2e)")
install.packages("ggpubr")
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
library(ggpubr)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
# Emisiones de fermentación entérica
pefe <- ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica \n(Gg de CO2e)")
# Emisiones de manejo de estiércol
peme <- ggplot(emisiones_agricola, aes(ano, manejo_estiercol)) +
geom_point() +
ggtitle("Emisiones del manejo de estiércol \n(Gg de CO2e)")
# Emisiones de cutlivo de arroz
peca <- ggplot(emisiones_agricola, aes(ano, cult_arroz)) +
geom_point() +
ggtitle("Emisiones del cultivo de arroz \n(Gg de CO2e)")
# Manejo de suelo agrícola
pmsa <- ggplot(emisiones_agricola, aes(ano, man_suelo_argi)) +
geom_point() +
ggtitle("Emisiones del manejo de suelo agrícola \n(Gg de CO2e)")
# Quema de residuos agrícolas
pqra <- ggplot(emisiones_agricola, aes(ano, quema_resi_agri)) +
geom_point() +
ggtitle("Emisiones de la quema de residuos \n(Gg de CO2e)")
# Total de emisiones de CH4
ptech4 <- ggplot(emisiones_agricola, aes(ano, tot_ch4)) +
geom_point() +
ggtitle("Total de emisiones de CH4 \n(Gg de CO2e)")
# Total de emisiones de N2O
pten2o <- ggplot(emisiones_agricola, aes(ano, tot_n2o)) +
geom_point() +
ggtitle("Total de emisiones de N2O \n(Gg de CO2e)")
# Total de emisiones
pte <- ggplot(emisiones_agricola, aes(ano, tot_emisiones)) +
geom_point()
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica \n(Gg de CO2e)") +
xlab("") +
ylab("Gg de CO2e")
# Emisiones de fermentación entérica
pefe <- ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de manejo de estiércol
peme <- ggplot(emisiones_agricola, aes(ano, manejo_estiercol)) +
geom_point() +
ggtitle("Emisiones del manejo de estiércol \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de cutlivo de arroz
peca <- ggplot(emisiones_agricola, aes(ano, cult_arroz)) +
geom_point() +
ggtitle("Emisiones del cultivo de arroz \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Manejo de suelo agrícola
pmsa <- ggplot(emisiones_agricola, aes(ano, man_suelo_argi)) +
geom_point() +
ggtitle("Emisiones del manejo de suelo agrícola \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Quema de residuos agrícolas
pqra <- ggplot(emisiones_agricola, aes(ano, quema_resi_agri)) +
geom_point() +
ggtitle("Emisiones de la quema de residuos \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de CH4
ptech4 <- ggplot(emisiones_agricola, aes(ano, tot_ch4)) +
geom_point() +
ggtitle("Total de emisiones de CH4 \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de N2O
pten2o <- ggplot(emisiones_agricola, aes(ano, tot_n2o)) +
geom_point() +
ggtitle("Total de emisiones de N2O \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones
pte <- ggplot(emisiones_agricola, aes(ano, tot_emisiones)) +
geom_point() +
ggtitle("Total de emisiones \n(Gg de CO2e)") +
xlab("año") +
ylab("Gg de CO2e")
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
# Emisiones de fermentación entérica
pefe <- ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
ggtitle("Emisiones de la fermentación entérica") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de manejo de estiércol
peme <- ggplot(emisiones_agricola, aes(ano, manejo_estiercol)) +
geom_point() +
ggtitle("Emisiones del manejo de estiércol") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de cutlivo de arroz
peca <- ggplot(emisiones_agricola, aes(ano, cult_arroz)) +
geom_point() +
ggtitle("Emisiones del cultivo de arroz") +
xlab("año") +
ylab("Gg de CO2e")
# Manejo de suelo agrícola
pmsa <- ggplot(emisiones_agricola, aes(ano, man_suelo_argi)) +
geom_point() +
ggtitle("Emisiones del manejo de suelo agrícola") +
xlab("año") +
ylab("Gg de CO2e")
# Quema de residuos agrícolas
pqra <- ggplot(emisiones_agricola, aes(ano, quema_resi_agri)) +
geom_point() +
ggtitle("Emisiones de la quema de residuos") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de CH4
ptech4 <- ggplot(emisiones_agricola, aes(ano, tot_ch4)) +
geom_point() +
ggtitle("Total de emisiones de CH4") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de N2O
pten2o <- ggplot(emisiones_agricola, aes(ano, tot_n2o)) +
geom_point() +
ggtitle("Total de emisiones de N2O") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones
pte <- ggplot(emisiones_agricola, aes(ano, tot_emisiones)) +
geom_point() +
ggtitle("Total de emisiones") +
xlab("año") +
ylab("Gg de CO2e")
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte,
ncol = 3, nrow = 3)
uscuss
emisiones_uscuss
# Emisiones de tierras convertidas tierras forestales
etctf <- ggplot(emisiones_uscuss, aes(ano, conv_forest)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n tierras forestales") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de tierras convertidas a pastizales
etcp <- ggplot(emisiones_uscuss, aes(ano, conv_pastizal)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n a pastizales") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de tierras convertidas a tierras agrícolas
etcta <- ggplot(emisiones_uscuss, aes(ano, conv_agri)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n a a tierras agrícolas") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de tierras convertidas a asentamientos
etca <- ggplot(emisiones_uscuss, aes(ano, conv_asent)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n a asentamientos") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de tierras convertidas a otras tierras
etcot <- ggplot(emisiones_uscuss, aes(ano, conv_otros)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n a otras tierras") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de incendios
edi <- ggplot(emisiones_uscuss, aes(ano, incendios)) +
geom_point() +
ggtitle("Emisiones de incendios") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de balance
edb <- ggplot(emisiones_uscuss, aes(ano, balance)) +
geom_point() +
ggtitle("Balance de emisiones") +
xlab("año") +
ylab("Gg de CO2e")
ggarrange(etctf, etcp, etcta, etca, etcot, edi, edb,
ncol = 3, nrow = 3)
ggplot(emisiones_uscuss, aes(ano, conv_forest)) +
geom_point() +
geom_abline()
ggtitle("Emisiones de tierras convertidas \n tierras forestales") +
xlab("año") +
ylab("Gg de CO2e")
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
geom_abline() +
ggtitle("Emisiones de la fermentación entérica") +
xlab("año") +
ylab("Gg de CO2e")
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
geom_abline(stat = "abline") +
ggtitle("Emisiones de la fermentación entérica") +
xlab("año") +
ylab("Gg de CO2e")
knitr::opts_chunk$set(echo = TRUE)
# Cargar librerías
library(tidyverse)
library(ggplot2)
library(ggpubr)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte,
ncol = 3, nrow = 3)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte,
ncol = 3, nrow = 3)
ggarrange(etctf, etcp, etcta, etca, etcot, edi, edb,
ncol = 3, nrow = 3)
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte,
ncol = 3, nrow = 3)
ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones de la fermentación entérica") +
xlab("año") +
ylab("Gg de CO2e")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
################### Emisiones del sector agrícola 1990-2012 ###################
emisiones_agricola <- read_csv("emisiones/agricola.csv", col_names = TRUE)
# Emisiones de fermentación entérica
pefe <- ggplot(emisiones_agricola, aes(ano, ferm_enterica)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones de la fermentación entérica") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de manejo de estiércol
peme <- ggplot(emisiones_agricola, aes(ano, manejo_estiercol)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones del manejo de estiércol") +
xlab("año") +
ylab("Gg de CO2e")
# Emisiones de cutlivo de arroz
peca <- ggplot(emisiones_agricola, aes(ano, cult_arroz)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones del cultivo de arroz") +
xlab("año") +
ylab("Gg de CO2e")
# Manejo de suelo agrícola
pmsa <- ggplot(emisiones_agricola, aes(ano, man_suelo_argi)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones del manejo de suelo agrícola") +
xlab("año") +
ylab("Gg de CO2e")
# Quema de residuos agrícolas
pqra <- ggplot(emisiones_agricola, aes(ano, quema_resi_agri)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Emisiones de la quema de residuos") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de CH4
ptech4 <- ggplot(emisiones_agricola, aes(ano, tot_ch4)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Total de emisiones de CH4") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones de N2O
pten2o <- ggplot(emisiones_agricola, aes(ano, tot_n2o)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Total de emisiones de N2O") +
xlab("año") +
ylab("Gg de CO2e")
# Total de emisiones
pte <- ggplot(emisiones_agricola, aes(ano, tot_emisiones)) +
geom_point() +
geom_smooth(method='lm') +
ggtitle("Total de emisiones") +
xlab("año") +
ylab("Gg de CO2e")
ggarrange(pefe, peme, peca, pmsa, pqra, ptech4, pten2o, pte,
ncol = 3, nrow = 3)
theme_get()
ggplot(emisiones_uscuss, aes(ano, conv_forest)) +
geom_point() +
ggtitle("Emisiones de tierras convertidas \n tierras forestales") +
xlab("año") +
ylab("Gg de CO2e") +
theme(plot.title = element_text(size = 10)
)
